#!/usr/bin/env ruby

require "magelex"

require 'yaml'
require 'optparse'

program_name = File.basename __FILE__
options = {out_dir: 'lexware'}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{program_name} DIR_OR_FILE"
  opts.separator ""
  opts.separator "Imports order data from magento csv export, exports this"\
    " data to be imported to open positions in lexware."
  opts.separator ""

  opts.on('-o', '--out-dir DIR', 'Directory to write output files to, otherwise concats to STDOUT. If "auto", outputs to source dir.') do |o|
    options[:out_dir] = o
  end
  opts.on('-l', '--log-file FILE', 'File to log to (default: STDERR).') do |o|
    options[:log_file] = o
  end
  opts.on('-v', '--verbose', 'Run verbosely') do |o|
    options[:verbose] = o
  end
  opts.on('-s', '--skip-db', 'Do not update dates from mysql database.') do |o|
    options[:skipdb] = o
  end
  opts.on_tail('--version', 'Show version and exit.') do
    puts "Magelex #{Magelex::VERSION}"
    exit 0
  end
  opts.on('-h', '--help', 'Show this help and exit.') do
    puts opts
    exit 0
  end
end.parse!

if ARGV.length != 1
  STDERR.puts "Need a single argument (directory or file)"
  exit 1
end

Magelex.logger = Logger.new(options[:log_file] ? options[:log_file] : STDERR)

Magelex.logger.level = options[:verbose] ? Logger::DEBUG : Logger::INFO
Magelex.logger.datetime_format = "%Y-%m-%d %H:%M:%S"
Magelex.logger.formatter = proc { |severity, datetime, progname, msg|
  "#{severity} - #{datetime} - #{msg}\n"
}

def main options
  Magelex.logger.info("Started (version #{Magelex::VERSION})")

  Dir.mkdir options[:out_dir] rescue {}
  outdir = Pathname.new(options[:out_dir]).realpath

  if File.directory?(ARGV[0])
    Dir.entries(ARGV[0]).select{|e| !File.directory? e}.each do |f|
      outfile = outdir.join(File::basename f)
      infile = Pathname.new(ARGV[0]).join f
      Magelex.logger.info("Processing file #{infile}")
      Magelex::process_file infile, outfile, options
    end
  else
    outfile = outdir.join(File::basename ARGV[0])
    Magelex::process_file ARGV[0], outfile, options
  end
  Magelex.logger.info("Finished")
end

main options
